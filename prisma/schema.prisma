generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categorias {
  id         Int      @id @default(autoincrement())
  id_usuario Int
  nome       String   @db.VarChar(60)
  descricao  String?
  usuarios   usuarios @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([id_usuario, nome], map: "categorias_id_usuario_nome_idx")
}

model contas {
  id              Int          @id @default(autoincrement())
  id_usuario      Int
  nome            String       @db.VarChar(60)
  tipo            tipo_conta?  @default(d)
  data_criacao    DateTime?    @db.Timestamp(6)
  data_fechamento DateTime     @db.Date
  data_vencimento DateTime     @db.Date
  usuarios        usuarios     @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transacoes      transacoes[]

  @@unique([id_usuario, nome], map: "contas_id_usuario_nome_idx")
}

model transacoes {
  id             Int             @id @default(autoincrement())
  id_conta       Int?
  id_categoria   Int?
  valor          Int
  nome           String          @db.VarChar(60)
  descricao      String?
  data_pagamento DateTime        @db.Date
  hora_pagamento DateTime?       @db.Time(6)
  lista_desejo   Boolean?        @default(false)
  tipo           tipo_transacao? @default(s)
  contas         contas?         @relation(fields: [id_conta], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model usuarios {
  id           Int          @id @default(autoincrement())
  nome         String       @db.VarChar(60)
  email        String       @unique @db.VarChar(255)
  senha_hash   String
  data_criacao DateTime?    @default(now()) @db.Timestamp(6)
  ultimo_login DateTime?    @default(now()) @db.Timestamp(6)
  ativo        Boolean?     @default(true)
  categorias   categorias[]
  contas       contas[]
}

enum tipo_conta {
  d
  c
}

enum tipo_transacao {
  e
  s
}
